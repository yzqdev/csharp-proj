<!--
// Copyright (c) 2017 Ratish Philip 
//
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal 
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is 
// furnished to do so, subject to the following conditions: 
// 
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software. 
// 
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE. 
//
// This file is part of the WPFSpark project: https://github.com/ratishphilip/wpfspark
//
// WPFSpark v1.3.1
// 
 -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:wpfspark="clr-namespace:WPFSpark">

    <!-- ToggleSwitch Basic Template -->
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitchBasicTemplate}"
                     TargetType="{x:Type wpfspark:ToggleSwitch}">
        <!-- PART_Content -->
        <!-- Outermost border of the ToggleSwitch -->
        <wpfspark:ClipBorder x:Name="PART_OuterBorder"
                             Width="{TemplateBinding Width}"
                             Height="{TemplateBinding Height}"
                             BorderBrush="{TemplateBinding BorderBrush}"
                             Background="{TemplateBinding Background}"
                             CornerRadius="{TemplateBinding CornerRadius}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             OptimizeClipRendering="{TemplateBinding OptimizeRendering}">
            <wpfspark:ClipBorder.Resources>
                <wpfspark:ToggleSwitchProxy x:Key="TS_Proxy"
                                            CheckedMargin="{Binding Path=CheckedMargin, RelativeSource={RelativeSource AncestorType={x:Type wpfspark:ToggleSwitch}}}"
                                            UncheckedMargin="{Binding Path=UncheckedMargin, RelativeSource={RelativeSource AncestorType={x:Type wpfspark:ToggleSwitch}}}">
                </wpfspark:ToggleSwitchProxy>
            </wpfspark:ClipBorder.Resources>
            <!-- Visual States -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition From="Pressed"
                                          To="Normal"
                                          GeneratedDuration="00:00:00.2"></VisualTransition>
                        <VisualTransition From="MouseOver"
                                          To="Normal"
                                          GeneratedDuration="00:00:00.2"></VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="Glow"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="Shine"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000"
                                                      Value="0.6" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="DisabledBorder"
                                             Storyboard.TargetProperty="Opacity"
                                             To=".55" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentGrid"
                                                              Storyboard.TargetProperty="Margin">
                                <EasingThicknessKeyFrame x:Name="PART_CheckedKeyFrame"
                                                         KeyTime="00:00:00.2"
                                                         Value="{Binding Path=CheckedMargin, Source={StaticResource TS_Proxy}}">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <QuarticEase  EasingMode="EaseIn" />
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <!-- ToggleSwitch supports only Two states -->
                    <VisualState x:Name="Indeterminate" />
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentGrid"
                                                              Storyboard.TargetProperty="Margin">
                                <EasingThicknessKeyFrame x:Name="PART_UncheckedKeyFrame"
                                                         KeyTime="00:00:00.2"
                                                         Value="{Binding Path=UncheckedMargin, Source={StaticResource TS_Proxy}}">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <QuarticEase  EasingMode="EaseIn" />
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Canvas Name="PART_RootCanvas"
                    Width="{TemplateBinding Width}"
                    Height="{TemplateBinding Height}"
                    Background="{TemplateBinding Background}">
                <Grid Name="PART_ContentGrid"
                      Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.4*"></ColumnDefinition>
                        <ColumnDefinition Width="0.1*"></ColumnDefinition>
                        <ColumnDefinition Width="0.1*"></ColumnDefinition>
                        <ColumnDefinition Width="0.4*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <!-- Checked State -->
                    <!-- Background displayed when the ToggleSwitch is in the Checked State -->
                    <Border x:Name="PART_CheckedBorder"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            BorderThickness="0"
                            Margin="0"
                            CornerRadius="0"
                            Background="{TemplateBinding CheckedBackground}">
                    </Border>
                    <!-- Text which is displayed when the ToggleSwitch is in the Checked State -->
                    <TextBlock x:Name="PART_CheckedContent"
                               Grid.Column="0"
                               Text="{TemplateBinding CheckedText}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontFamily="{TemplateBinding FontFamily}"
                               FontWeight="{TemplateBinding FontWeight}"
                               FontSize="{TemplateBinding FontSize}"
                               Foreground="{TemplateBinding CheckedForeground}"
                               Effect="{TemplateBinding CheckedTextEffect}">
                    </TextBlock>

                    <!-- Unchecked State -->
                    <!-- Background displayed when the ToggleSwitch is in the Unchecked State -->
                    <Border x:Name="PART_UncheckedBorder"
                            Grid.Column="2"
                            Grid.ColumnSpan="2"
                            BorderThickness="0"
                            Margin="0"
                            CornerRadius="0"
                            Background="{TemplateBinding UncheckedBackground}">
                    </Border>
                    <!-- Text which is displayed when the ToggleSwitch is in the Unchecked State -->
                    <TextBlock x:Name="PART_UncheckedContent"
                               Grid.Column="3"
                               Text="{TemplateBinding UncheckedText}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontFamily="{TemplateBinding FontFamily}"
                               FontWeight="{TemplateBinding FontWeight}"
                               FontSize="{TemplateBinding FontSize}"
                               Foreground="{TemplateBinding UncheckedForeground}"
                               Effect="{TemplateBinding UncheckedTextEffect}">
                    </TextBlock>

                    <!-- ToggleSwitch Thumb -->
                    <wpfspark:ClipBorder x:Name="PART_Thumb"
                                         Grid.Column="1"
                                         Grid.ColumnSpan="2"
                                         Margin="0"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Stretch"
                                         Width="{Binding Path=ThumbWidth, RelativeSource={RelativeSource AncestorType={x:Type wpfspark:ToggleSwitch}}}"
                                         Height="{Binding Path=ThumbHeight, RelativeSource={RelativeSource AncestorType={x:Type wpfspark:ToggleSwitch}}}"
                                         BorderBrush="{TemplateBinding ThumbBorderBrush}"
                                         BorderThickness="{TemplateBinding ThumbBorderThickness}"
                                         CornerRadius="{Binding Path=ThumbCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type wpfspark:ToggleSwitch}}}"
                                         Background="{TemplateBinding ThumbBackground}"
                                         OptimizeClipRendering="{TemplateBinding OptimizeThumbRendering}">
                        <Grid x:Name="PART_ThumbContentGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border x:Name="Glow"
                                    Opacity="0"
                                    VerticalAlignment="Stretch"
                                    HorizontalAlignment="Stretch"
                                    Grid.RowSpan="2"
                                    Background="{TemplateBinding ThumbGlowBrush}">
                            </Border>
                            <Border x:Name="Shine"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="{TemplateBinding ThumbShineBrush}">
                            </Border>
                        </Grid>
                    </wpfspark:ClipBorder>

                    <Border x:Name="DisabledBorder"
                            Grid.Column="0"
                            Grid.ColumnSpan="4"
                            BorderThickness="0"
                            Margin="0"
                            CornerRadius="0"
                            Background="White"
                            Opacity="0">
                    </Border>
                </Grid>
            </Canvas>
        </wpfspark:ClipBorder>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Opacity"
                        Value="0.8" />
                <Setter TargetName="PART_UncheckedContent"
                        Property="Foreground"
                        Value="LightGray"></Setter>
                <Setter TargetName="PART_OuterBorder"
                        Property="Background"
                        Value="LightGray"></Setter>
                <Setter TargetName="PART_CheckedContent"
                        Property="Foreground"
                        Value="LightGray"></Setter>
                <Setter TargetName="DisabledBorder"
                        Property="Opacity"
                        Value="0.5"></Setter>
            </Trigger>
            <Trigger Property="ToggleButton.IsPressed"
                     Value="True">
                <Setter Property="Opacity"
                        TargetName="Shine"
                        Value="0.6" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Toggle Switch Basic Style -->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.Basic.Style}"
           TargetType="{x:Type wpfspark:ToggleSwitch}">
        <Setter Property="SnapsToDevicePixels"
                Value="True"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="FontSize"
                Value="16"></Setter>
        <Setter Property="MinWidth"
                Value="100"></Setter>
        <Setter Property="MinHeight"
                Value="40"></Setter>
        <Setter Property="Width"
                Value="100"></Setter>
        <Setter Property="Height"
                Value="40"></Setter>
        <Setter Property="IsCheckedLeft"
                Value="True" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="CornerRadius"
                Value="4" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="ThumbWidthRatio"
                Value="0.35" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="ThumbBorderThickness"
                Value="2" />
        <Setter Property="IsChecked"
                Value="False" />
        <Setter Property="CheckedForeground"
                Value="Black" />
        <Setter Property="UncheckedForeground"
                Value="Black" />
        <Setter Property="CheckedBackground"
                Value="#4cd964" />
        <Setter Property="UncheckedBackground"
                Value="#ff9600" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,0"
                                     StartPoint="0,1">
                    <GradientStop Color="#787878"
                                  Offset="0" />
                    <GradientStop Color="#A1A1A1"
                                  Offset="0.5" />
                    <GradientStop Color="#555555"
                                  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ThumbBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1"
                                     StartPoint="0,0">
                    <GradientStop Color="#C1C1C1"
                                  Offset="0" />
                    <GradientStop Color="#A5A5A5"
                                  Offset="0.5" />
                    <GradientStop Color="#FCFCF6"
                                  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ThumbBorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1"
                                     StartPoint="0,0">
                    <GradientStop Color="#F6F6F6"
                                  Offset="0" />
                    <GradientStop Color="#959595"
                                  Offset="0.5" />
                    <GradientStop Color="#565656"
                                  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="CheckedText"
                Value="Yes" />
        <Setter Property="UncheckedText"
                Value="No" />
        <Setter Property="Template"
                Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitchBasicTemplate}}" />
    </Style>

    <!-- ToggleSwitch Modern Template (for iOS / Windows Mobile look and feel )-->
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitchModernTemplate}"
                     TargetType="{x:Type wpfspark:ToggleSwitch}">
        <!-- PART_Content -->
        <Grid x:Name="PART_OuterGrid">
            <Grid.Resources>
                <wpfspark:ToggleSwitchProxy x:Key="TS_Proxy"
                                            CheckedMargin="{Binding Path=CheckedMargin, RelativeSource={RelativeSource AncestorType={x:Type wpfspark:ToggleSwitch}}}"
                                            UncheckedMargin="{Binding Path=UncheckedMargin, RelativeSource={RelativeSource AncestorType={x:Type wpfspark:ToggleSwitch}}}">
                </wpfspark:ToggleSwitchProxy>
            </Grid.Resources>
            <!-- Visual States -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="DisabledBorder"
                                             Storyboard.TargetProperty="Opacity"
                                             To=".55" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentGrid"
                                                              Storyboard.TargetProperty="Margin">
                                <EasingThicknessKeyFrame x:Name="PART_CheckedKeyFrame"
                                                         KeyTime="00:00:00.2"
                                                         Value="{Binding Path=CheckedMargin, Source={StaticResource TS_Proxy}}">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <QuarticEase  EasingMode="EaseIn" />
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>
                            </ThicknessAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_OuterAccentBorder"
                                                           Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.2"
                                                      Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuarticEase  EasingMode="EaseIn" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_AccentThumb"
                                                           Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.2"
                                                      Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuarticEase  EasingMode="EaseIn" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_OuterBorder"
                                                           Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.2"
                                                      Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuarticEase  EasingMode="EaseIn" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Thumb"
                                                           Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.2"
                                                      Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuarticEase  EasingMode="EaseIn" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <!-- ToggleSwitch supports only Two states -->
                    <VisualState x:Name="Indeterminate" />
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentGrid"
                                                              Storyboard.TargetProperty="Margin">
                                <EasingThicknessKeyFrame x:Name="PART_UncheckedKeyFrame"
                                                         KeyTime="00:00:00.2"
                                                         Value="{Binding Path=UncheckedMargin, Source={StaticResource TS_Proxy}}">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <QuarticEase  EasingMode="EaseIn" />
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>
                            </ThicknessAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_OuterBorder"
                                                           Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.2"
                                                      Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuarticEase  EasingMode="EaseIn" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Thumb"
                                                           Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.2"
                                                      Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuarticEase  EasingMode="EaseIn" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_OuterAccentBorder"
                                                           Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.2"
                                                      Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuarticEase  EasingMode="EaseIn" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_AccentThumb"
                                                           Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.2"
                                                      Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuarticEase  EasingMode="EaseIn" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <!-- Outermost border of the ToggleSwitch which is shown when it is in Unchecked state-->
            <wpfspark:ClipBorder x:Name="PART_OuterBorder"
                                 Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 Background="{TemplateBinding Background}"
                                 CornerRadius="{TemplateBinding CornerRadius}"
                                 BorderThickness="{TemplateBinding BorderThickness}">
            </wpfspark:ClipBorder>
            <!-- Outermost border (having the accent color) of the ToggleSwitch which is shown when it is in Checked state-->
            <wpfspark:ClipBorder x:Name="PART_OuterAccentBorder"
                                 Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}"
                                 BorderBrush="{TemplateBinding AccentBrush}"
                                 Background="{TemplateBinding AccentBrush}"
                                 CornerRadius="{TemplateBinding CornerRadius}"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 IsHitTestVisible="False"
                                 Opacity="0" />
            <!-- Outermost border of the ToggleSwitch which is the container for the Thumb-->
            <wpfspark:ClipBorder x:Name="PART_ThumbContainer"
                                 Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}"
                                 BorderBrush="Transparent"
                                 Background="Transparent"
                                 CornerRadius="{TemplateBinding CornerRadius}"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 OptimizeClipRendering="{TemplateBinding OptimizeRendering}">
                <Canvas Name="PART_RootCanvas"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="Transparent">
                    <Grid Name="PART_ContentGrid"
                          Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.4*"></ColumnDefinition>
                            <ColumnDefinition Width="0.1*"></ColumnDefinition>
                            <ColumnDefinition Width="0.1*"></ColumnDefinition>
                            <ColumnDefinition Width="0.4*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <!-- ToggleSwitch Thumb which is shown when ToggleSwitch is in Unchecked state-->
                        <wpfspark:ClipBorder x:Name="PART_Thumb"
                                             Grid.Column="1"
                                             Grid.ColumnSpan="2"
                                             Margin="0"
                                             HorizontalAlignment="Stretch"
                                             VerticalAlignment="Stretch"
                                             Width="{Binding Path=ThumbWidth, RelativeSource={RelativeSource AncestorType={x:Type wpfspark:ToggleSwitch}}}"
                                             Height="{Binding Path=ThumbHeight, RelativeSource={RelativeSource AncestorType={x:Type wpfspark:ToggleSwitch}}}"
                                             BorderBrush="Transparent"
                                             BorderThickness="{TemplateBinding ThumbBorderThickness}"
                                             CornerRadius="{Binding Path=ThumbCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type wpfspark:ToggleSwitch}}}"
                                             Background="{TemplateBinding ThumbBackground}"
                                             OptimizeClipRendering="{TemplateBinding OptimizeThumbRendering}">
                            <Grid x:Name="PART_ThumbContentGrid"></Grid>
                        </wpfspark:ClipBorder>
                        <!-- ToggleSwitch Thumb with accent color which is shown when ToggleSwitch is in Checked state-->
                        <wpfspark:ClipBorder x:Name="PART_AccentThumb"
                                             IsHitTestVisible="False"
                                             Grid.Column="1"
                                             Grid.ColumnSpan="2"
                                             Margin="0"
                                             HorizontalAlignment="Stretch"
                                             VerticalAlignment="Stretch"
                                             Width="{Binding Path=ThumbWidth, RelativeSource={RelativeSource AncestorType={x:Type wpfspark:ToggleSwitch}}}"
                                             Height="{Binding Path=ThumbHeight, RelativeSource={RelativeSource AncestorType={x:Type wpfspark:ToggleSwitch}}}"
                                             BorderBrush="Transparent"
                                             BorderThickness="{TemplateBinding ThumbBorderThickness}"
                                             CornerRadius="{Binding Path=ThumbCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type wpfspark:ToggleSwitch}}}"
                                             Background="{TemplateBinding ThumbAccentBrush}"
                                             OptimizeClipRendering="{TemplateBinding OptimizeThumbRendering}"
                                             Opacity="0">
                        </wpfspark:ClipBorder>

                        <Border x:Name="DisabledBorder"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                BorderThickness="0"
                                Margin="0"
                                CornerRadius="0"
                                Background="White"
                                Opacity="0">
                        </Border>
                    </Grid>
                </Canvas>
            </wpfspark:ClipBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Opacity"
                        Value="0.8" />
                <Setter TargetName="PART_OuterBorder"
                        Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter TargetName="PART_OuterAccentBorder"
                        Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter TargetName="DisabledBorder"
                        Property="Opacity"
                        Value="0.5"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Modify the color to change the accent color of the ToggleBrush.UWP.Light.Style and ToggleBrush.UWP.Dark.Style -->
    <Color x:Key="ActiveUWPColor"
           po:Freeze="true">#007aff</Color>
    <SolidColorBrush x:Key="ActiveUWPBrush"
                     po:Freeze="true"
                     Color="{StaticResource ActiveUWPColor}"></SolidColorBrush>

    <!-- UWP Light Style for light background -->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.UWP.Light.Style}"
           TargetType="{x:Type wpfspark:ToggleSwitch}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="MinWidth"
                Value="60"></Setter>
        <Setter Property="MinHeight"
                Value="30"></Setter>
        <Setter Property="Width"
                Value="60"></Setter>
        <Setter Property="Height"
                Value="30"></Setter>
        <Setter Property="IsCheckedLeft"
                Value="True" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="Black" />
        <Setter Property="CornerRadius"
                Value="20" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="ThumbWidthRatio"
                Value="0.45" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="ThumbBorderThickness"
                Value="5" />
        <Setter Property="IsChecked"
                Value="False" />
        <Setter Property="CheckedForeground"
                Value="Transparent" />
        <Setter Property="UncheckedForeground"
                Value="Transparent" />
        <Setter Property="ThumbBorderBrush"
                Value="Transparent" />
        <Setter Property="ThumbBackground"
                Value="Black" />
        <Setter Property="CheckedBackground"
                Value="Transparent" />
        <Setter Property="UncheckedBackground"
                Value="Transparent" />
        <Setter Property="CheckedText"
                Value="" />
        <Setter Property="UncheckedText"
                Value="" />
        <Setter Property="AccentMode"
                Value="System"></Setter>
        <Setter Property="AccentBrush"
                Value="{StaticResource ActiveUWPBrush}"></Setter>
        <Setter Property="ThumbAccentBrush"
                Value="White"></Setter>
        <Setter Property="Template"
                Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitchModernTemplate}}" />
    </Style>

    <!-- UWP Dark Style for dark backgrounds -->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.UWP.Dark.Style}"
           TargetType="{x:Type wpfspark:ToggleSwitch}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="MinWidth"
                Value="60"></Setter>
        <Setter Property="MinHeight"
                Value="30"></Setter>
        <Setter Property="Width"
                Value="60"></Setter>
        <Setter Property="Height"
                Value="30"></Setter>
        <Setter Property="IsCheckedLeft"
                Value="True" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="White" />
        <Setter Property="CornerRadius"
                Value="20" />
        <Setter Property="Background"
                Value="Black" />
        <Setter Property="ThumbWidthRatio"
                Value="0.45" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="ThumbBorderThickness"
                Value="5" />
        <Setter Property="IsChecked"
                Value="False" />
        <Setter Property="CheckedForeground"
                Value="Transparent" />
        <Setter Property="UncheckedForeground"
                Value="Transparent" />
        <Setter Property="ThumbBorderBrush"
                Value="Transparent" />
        <Setter Property="ThumbBackground"
                Value="White" />
        <Setter Property="CheckedBackground"
                Value="Transparent" />
        <Setter Property="UncheckedBackground"
                Value="Transparent" />
        <Setter Property="CheckedText"
                Value="" />
        <Setter Property="UncheckedText"
                Value="" />
        <Setter Property="AccentBrush"
                Value="#007aff"></Setter>
        <Setter Property="ThumbAccentBrush"
                Value="White"></Setter>
        <Setter Property="Template"
                Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitchModernTemplate}}" />
    </Style>

    <!-- iOS Colors -->
    <SolidColorBrush x:Key="iOS.Gray.Brush"
                     po:Freeze="true">#8e8e93</SolidColorBrush>
    <SolidColorBrush x:Key="iOS.Green.Brush"
                     po:Freeze="true">#4cd964</SolidColorBrush>
    <SolidColorBrush x:Key="iOS.LightBlue.Brush"
                     po:Freeze="true">#5ac8fa</SolidColorBrush>
    <SolidColorBrush x:Key="iOS.DarkBlue.Brush"
                     po:Freeze="true">#34aadc</SolidColorBrush>
    <SolidColorBrush x:Key="iOS.Blue.Brush"
                     po:Freeze="true">#007aff</SolidColorBrush>
    <SolidColorBrush x:Key="iOS.Yellow.Brush"
                     po:Freeze="true">#ffcc00</SolidColorBrush>
    <SolidColorBrush x:Key="iOS.Orange.Brush"
                     po:Freeze="true">#ff9600</SolidColorBrush>
    <SolidColorBrush x:Key="iOS.OrangeRed.Brush"
                     po:Freeze="true">#ff3b30</SolidColorBrush>
    <SolidColorBrush x:Key="iOS.Purple.Brush"
                     po:Freeze="true">#5856d6</SolidColorBrush>
    <SolidColorBrush x:Key="iOS.Pink.Brush"
                     po:Freeze="true">#ff2d55</SolidColorBrush>

    <!-- Modify the value of iOS.Checked.Color, to one of the colors defined above,
         to change the accent color for ToggleSwitch.iOS.Light.Style -->
    <Color x:Key="iOS.Checked.Color"
           po:Freeze="true">#4cd964</Color>
    <SolidColorBrush x:Key="iOS.Checked.Brush"
                     po:Freeze="true"
                     Color="{StaticResource iOS.Checked.Color}"></SolidColorBrush>

    <!-- Unchecked Color-->
    <Color x:Key="iOS.Unchecked.Color"
           po:Freeze="true">#cdcdcd</Color>
    <SolidColorBrush x:Key="iOS.Unchecked.Brush"
                     po:Freeze="true"
                     Color="{StaticResource iOS.Unchecked.Color}"></SolidColorBrush>

    <!-- iOS Base Style for White background -->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Style}"
           TargetType="{x:Type wpfspark:ToggleSwitch}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="MinWidth"
                Value="50"></Setter>
        <Setter Property="MinHeight"
                Value="30"></Setter>
        <Setter Property="Width"
                Value="50"></Setter>
        <Setter Property="Height"
                Value="30"></Setter>
        <Setter Property="IsCheckedLeft"
                Value="True" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="{StaticResource iOS.Unchecked.Brush}" />
        <Setter Property="CornerRadius"
                Value="20" />
        <Setter Property="Background"
                Value="{StaticResource iOS.Unchecked.Brush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ThumbBorderThickness"
                Value="1" />
        <Setter Property="IsChecked"
                Value="False" />
        <Setter Property="CheckedForeground"
                Value="Transparent" />
        <Setter Property="UncheckedForeground"
                Value="Transparent" />
        <Setter Property="ThumbBorderBrush"
                Value="{StaticResource iOS.Unchecked.Brush}" />
        <Setter Property="ThumbBackground"
                Value="White" />
        <Setter Property="CheckedBackground"
                Value="Transparent" />
        <Setter Property="UncheckedBackground"
                Value="Transparent" />
        <Setter Property="CheckedText"
                Value="" />
        <Setter Property="UncheckedText"
                Value="" />
        <Setter Property="OptimizeRendering"
                Value="True"></Setter>
        <Setter Property="ThumbAccentBrush"
                Value="White"></Setter>
        <Setter Property="AccentMode"
                Value="User"></Setter>
        <Setter Property="AccentBrush"
                Value="{StaticResource iOS.Checked.Brush}"></Setter>
        <Setter Property="Template"
                Value="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitchModernTemplate}}" />
    </Style>

    <!-- iOS Green Style-->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Green.Style}"
           BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Style}}"
           TargetType="{x:Type wpfspark:ToggleSwitch}">
        <Setter Property="AccentBrush"
                Value="{StaticResource iOS.Green.Brush}"></Setter>
    </Style>

    <!-- iOS Blue Style-->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Blue.Style}"
           BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Style}}"
           TargetType="{x:Type wpfspark:ToggleSwitch}">
        <Setter Property="AccentBrush"
                Value="{StaticResource iOS.Blue.Brush}"></Setter>
    </Style>

    <!-- iOS LightBlue Style-->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.LightBlue.Style}"
           BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Style}}"
           TargetType="{x:Type wpfspark:ToggleSwitch}">
        <Setter Property="AccentBrush"
                Value="{StaticResource iOS.LightBlue.Brush}"></Setter>
    </Style>

    <!-- iOS DarkBlue Style-->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.DarkBlue.Style}"
           BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Style}}"
           TargetType="{x:Type wpfspark:ToggleSwitch}">
        <Setter Property="AccentBrush"
                Value="{StaticResource iOS.DarkBlue.Brush}"></Setter>
    </Style>

    <!-- iOS Yellow Style-->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Yellow.Style}"
           BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Style}}"
           TargetType="{x:Type wpfspark:ToggleSwitch}">
        <Setter Property="AccentBrush"
                Value="{StaticResource iOS.Yellow.Brush}"></Setter>
    </Style>

    <!-- iOS Orange Style-->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Orange.Style}"
           BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Style}}"
           TargetType="{x:Type wpfspark:ToggleSwitch}">
        <Setter Property="AccentBrush"
                Value="{StaticResource iOS.Orange.Brush}"></Setter>
    </Style>

    <!-- iOS OrangeRed Style-->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.OrangeRed.Style}"
           BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Style}}"
           TargetType="{x:Type wpfspark:ToggleSwitch}">
        <Setter Property="AccentBrush"
                Value="{StaticResource iOS.OrangeRed.Brush}"></Setter>
    </Style>

    <!-- iOS Purple Style-->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Purple.Style}"
           BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Style}}"
           TargetType="{x:Type wpfspark:ToggleSwitch}">
        <Setter Property="AccentBrush"
                Value="{StaticResource iOS.Purple.Brush}"></Setter>
    </Style>

    <!-- iOS Pink Style-->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Pink.Style}"
           BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.iOS.Light.Style}}"
           TargetType="{x:Type wpfspark:ToggleSwitch}">
        <Setter Property="AccentBrush"
                Value="{StaticResource iOS.Pink.Brush}"></Setter>
    </Style>

    <!-- Default ToggleSwitch Style -->
    <Style BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly=wpfspark:ToggleSwitch, ResourceId=ToggleSwitch.UWP.Light.Style}}"
           TargetType="{x:Type wpfspark:ToggleSwitch}">
    </Style>
    
</ResourceDictionary>