<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Converter="clr-namespace:Arthas.Controls.Converter"
    xmlns:Metro="clr-namespace:Arthas.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Arthas;component/Controls/MetroBase.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Converter:StringToVisibility x:Key="StringToVisibility" />

    <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <TextBlock
                            x:Name="title"
                            Margin="8,0"
                            VerticalAlignment="Center"
                            Opacity="0.65"
                            Text="{TemplateBinding Content}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="title"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.9"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="title"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.5"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Metro:MetroTextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="AcceptsReturn" Value="False" />
        <Setter Property="TextWrapping" Value="NoWrap" />

        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="MouseMoveBackground" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush}" />
        <Setter Property="Foreground" Value="#A5000000" />
        <Setter Property="TitleForeground" Value="#A5000000" />
        <Setter Property="TitleMinWidth" Value="80" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Metro:MetroTextBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                x:Name="titleWidth1"
                                Width="Auto"
                                MinWidth="{TemplateBinding TitleMinWidth}" />
                            <ColumnDefinition x:Name="titleWidth2" Width="10" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Metro:MetroTextBlock
                            x:Name="title"
                            Grid.Column="0"
                            Margin="0,6"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Foreground="{TemplateBinding TitleForeground}"
                            Text="{TemplateBinding Title}" />
                        <Border
                            x:Name="back"
                            Grid.Column="2"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid>
                                <Border
                                    x:Name="border"
                                    BorderBrush="#FF000000"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Opacity="0.15" />
                                <Border
                                    x:Name="bordermove"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Opacity="0" />
                                <Border
                                    x:Name="bordertrue"
                                    BorderBrush="#FF99cb8a"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Visibility="Hidden" />
                                <Border
                                    x:Name="borderfalse"
                                    BorderBrush="#FFe99595"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Visibility="Hidden" />
                                <Grid x:Name="content">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="iconWidth" Width="Auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition x:Name="buttonWidth1" Width="Auto" />
                                        <ColumnDefinition x:Name="buttonWidth2" Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Image
                                        Grid.Column="0"
                                        Width="16"
                                        Height="16"
                                        Margin="6,6,0,6"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Source="{TemplateBinding Icon}" />
                                    <Grid
                                        x:Name="hideInputHint"
                                        Grid.Column="1"
                                        Opacity="0">
                                        <Metro:MetroTextBlock
                                            x:Name="inputHint"
                                            Margin="6,5,5,5"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsHitTestVisible="False"
                                            Opacity="0"
                                            Text="{TemplateBinding InputHint}" />
                                    </Grid>
                                    <ScrollViewer
                                        x:Name="PART_ContentHost"
                                        Grid.Column="1"
                                        Margin="5"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden" />

                                    <Rectangle
                                        Grid.Column="2"
                                        Width="1"
                                        Height="11"
                                        Margin="5,9,0,0"
                                        VerticalAlignment="Top"
                                        Fill="#FF000000"
                                        Opacity="0.15" />
                                    <Button
                                        x:Name="button"
                                        Grid.Column="3"
                                        Margin="0,6"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Command="Metro:MetroTextBox.ButtonClickCommand"
                                        Content="{TemplateBinding ButtonTitle}"
                                        Focusable="False"
                                        Style="{StaticResource buttonStyle}" />
                                </Grid>
                            </Grid>
                        </Border>
                        <Popup
                            x:Name="popupHint"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="-14"
                            Placement="RelativePoint"
                            PlacementTarget="{Binding ElementName=PART_ContentHost}"
                            PopupAnimation="Fade"
                            VerticalOffset="-42">
                            <Grid>
                                <StackPanel Visibility="{TemplateBinding PopupHint, Converter={StaticResource StringToVisibility}}">
                                    <Border
                                        x:Name="popupborder"
                                        Background="{TemplateBinding BorderBrush}"
                                        CornerRadius="2">
                                        <Metro:MetroTextBlock
                                            x:Name="popupText"
                                            Margin="8,6"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Foreground="#FFFFFFFF"
                                            Text="{TemplateBinding PopupHint}" />
                                    </Border>
                                    <Polygon
                                        x:Name="popuppolygon"
                                        Margin="10,0,0,0"
                                        Fill="{TemplateBinding BorderBrush}"
                                        Points="0,0 10,0 5,5 0,0" />
                                </StackPanel>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="content" Property="Opacity" Value="0.5" />
                            <Setter TargetName="title" Property="Opacity" Value="0.35" />
                            <Setter TargetName="back" Property="Background" Value="#FFFAFAFA" />
                            <Setter TargetName="inputHint" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Opacity" Value="0" />
                            <Setter TargetName="bordermove" Property="Opacity" Value="1" />
                            <Setter TargetName="bordertrue" Property="BorderBrush" Value="#ff6fae5f" />
                            <Setter TargetName="borderfalse" Property="BorderBrush" Value="#ffe67979" />

                            <Setter TargetName="back" Property="Background" Value="{Binding MouseMoveBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPassWordBox" Value="true">
                            <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Hidden" />
                            <Setter Property="InputMethod.PreferredImeState" Value="Off" />
                        </Trigger>
                        <Trigger Property="MultipleLine" Value="true">
                            <Setter Property="AcceptsReturn" Value="true" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="Opacity" Value="0" />
                            <Setter TargetName="bordermove" Property="Opacity" Value="1" />
                            <Setter TargetName="popupHint" Property="IsOpen" Value="true" />
                            <Setter TargetName="bordertrue" Property="BorderBrush" Value="#ff6fae5f" />
                            <Setter TargetName="borderfalse" Property="BorderBrush" Value="#ffe67979" />
                            <Setter TargetName="inputHint" Property="Opacity" Value="0" />

                            <Setter TargetName="back" Property="Background" Value="{Binding MouseMoveBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="false">
                            <Setter TargetName="popupHint" Property="IsOpen" Value="false" />
                        </Trigger>
                        <Trigger Property="Title" Value="">
                            <Setter TargetName="titleWidth1" Property="MinWidth" Value="0" />
                            <Setter TargetName="titleWidth2" Property="Width" Value="0" />
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="hideInputHint" Property="Opacity" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                                <Condition Property="IsEnabled" Value="true" />
                                <Condition Property="IsKeyboardFocused" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="inputHint" Property="Opacity" Value="0.25" />
                        </MultiTrigger>
                        <Trigger Property="State" Value="true">
                            <Setter TargetName="border" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="bordertrue" Property="Visibility" Value="Visible" />

                            <Setter TargetName="popupborder" Property="Background" Value="#FF99cb8a" />
                            <Setter TargetName="popuppolygon" Property="Fill" Value="#FF99cb8a" />
                        </Trigger>
                        <Trigger Property="State" Value="false">
                            <Setter TargetName="border" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="borderfalse" Property="Visibility" Value="Visible" />

                            <Setter TargetName="popupborder" Property="Background" Value="#FFe99595" />
                            <Setter TargetName="popuppolygon" Property="Fill" Value="#FFe99595" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="iconWidth" Property="Width" Value="0" />
                        </Trigger>
                        <Trigger Property="ButtonTitle" Value="">
                            <Setter TargetName="buttonWidth1" Property="Width" Value="0" />
                            <Setter TargetName="buttonWidth2" Property="Width" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>