<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--标题-->
    <Style x:Key="TextBlockTitle" TargetType="TextBlock">
        <Setter Property="Margin" Value="0,0,0,0"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#222"/>
    </Style>
    <!--每行-->
    <Style x:Key="BorderItem" TargetType="Border">
        <Setter Property="Margin" Value="30,0"></Setter>
        <Setter Property="Padding" Value="20"></Setter>
        <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
        <Setter Property="BorderBrush" Value="#20000000"></Setter>
    </Style>
    <!--当控件获得键盘焦点时的样式-->
    <Style x:Key="FocusStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="Transparent" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--多选按钮-->
    <Style x:Key="WCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusStyle}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="#40ffffff"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal" >
                        <TextBlock Name="icon" FontSize="22" Margin="0,2,0,0" Text="&#xe630;" FontFamily="/AduMusic;component/Fonts/#iconfont" VerticalAlignment="Center" Foreground="#40ffffff"></TextBlock>
                        <TextBlock Name="text" VerticalAlignment="Center" Margin="6,0,0,0" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontSize="12" ></TextBlock>
                    </StackPanel>
                    <!--控件触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <!-- 画上一个勾 -->
                            <Setter TargetName="icon" Property="Text" Value="&#xe631;"/>
                            <Setter Property="Foreground" Value="#fff"/>
                            <Setter TargetName="icon" Property="Foreground" Value="#70ffffff"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="bd" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="Orange" Offset="0.12"/>
                                        <GradientStop Color="Yellow" Offset="0.92"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--选中背景-->
    <SolidColorBrush x:Key="CheckedColor">#FF917B</SolidColorBrush>
    <!--未选中背景-->
    <SolidColorBrush x:Key="UnCheckedColor">#999</SolidColorBrush>
    <!--鼠标选中背景-->
    <SolidColorBrush x:Key="MouseOverColor">#FF917B</SolidColorBrush>
    <SolidColorBrush x:Key="BorderBrush">#FF917B</SolidColorBrush>
    <!--单选按钮-->
    <Style TargetType="RadioButton" x:Key="WRadioButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#999"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="Transparent" BorderThickness="0" >
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Name="CheckArea" FontSize="18" Margin="0,0,0,0" VerticalAlignment="Center" FontFamily="/AduMusic;component/Fonts/#iconfont"  Text="&#xe672;" Foreground="#FF917B"></TextBlock>
                            <TextBlock VerticalAlignment="Center" Margin="2,0,0,2" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"></TextBlock>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckArea" Property="Text" Value="&#xe672;"></Setter>
                            <!--<Setter TargetName="CheckArea" Property="Foreground" Value="{StaticResource CheckedColor}"></Setter>-->
                            <Setter Property="Foreground" Value="#555"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <!--<Setter TargetName="CheckArea" Property="Foreground" Value="{StaticResource UnCheckedColor}"></Setter>-->
                            <Setter TargetName="CheckArea" Property="Text" Value="&#xe660;"></Setter>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource MouseOverColor}"></Setter>
                            <Setter TargetName="CheckArea" Property="Fill" Value="{DynamicResource MouseOverColor}"></Setter>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--下拉按钮-->
    <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Back" Background="Transparent" BorderThickness="0" BorderBrush="Transparent"  Height="20" Width="20">
                        <TextBlock Name="icon" FontSize="14" Text="&#xe656;" FontFamily="/AduMusic;component/Fonts/#iconfont" Height="20" Margin="2,5,0,0" VerticalAlignment="Center" Foreground="#FF917B"></TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="PathFill" Property="Fill" Value="White"></Setter>-->
                            <!--<Setter TargetName="Back" Property="Background" Value="#59CA4F"></Setter>-->
                            <!--<Setter TargetName="Back" Property="BorderBrush" Value="#59CA4F"></Setter>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--边框色-->
    <SolidColorBrush x:Key="BorderBursh">#FF917B</SolidColorBrush>
    <!--Combox-->
    <Style TargetType="ComboBox" x:Key="ComboBoxStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--ComBoxItem-->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="MinHeight" Value="22"></Setter>
                    <Setter Property="MinWidth" Value="60"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem" >
                                <Border Name="Back" Background="Transparent"  BorderThickness="0,0,0,0" BorderBrush="Transparent" Padding="5,2,5,4" >
                                    <ContentPresenter ContentSource="{Binding Source}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,0,0"></ContentPresenter>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="LightGray"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="LightGray"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border BorderBrush="{StaticResource BorderBursh}" BorderThickness="1" CornerRadius="1">
                        <Grid Background="#F7FDF7">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.8*"/>
                                <ColumnDefinition Width="0.2*" MaxWidth="24"/>
                            </Grid.ColumnDefinitions>
                            <TextBox  Grid.Column="0" IsReadOnly="{TemplateBinding IsReadOnly}" Text="{TemplateBinding Text}" VerticalAlignment="Center" BorderThickness="0"></TextBox>
                            <!--<Border  Grid.Column="0" BorderThickness="0" BorderBrush="#FF917B" CornerRadius="1,0,0,1">

                            </Border>-->
                            <!--<Border Grid.Column="1" BorderThickness="0" BorderBrush="#FF917B" CornerRadius="0,1,1,0">-->
                                <ToggleButton Grid.Column="1" Style="{StaticResource ComboxStyleBtn}" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
                            <!--</Border>-->
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Border CornerRadius="1" BorderThickness="1,1,1,1"  MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5"/>
                                    </Border.Effect>
                                    <ScrollViewer Margin="0" Style="{DynamicResource WScrollviewer}" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--提交按钮-->
    <Style x:Key="SubmitButton" TargetType="{x:Type Button}" >
        <Setter Property="Background" Value="#E7E8E8"></Setter>
        <Setter Property="Foreground" Value="#FF917B"></Setter>
        <Setter Property="BorderBrush" Value="#FF917B"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}"  BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="true" CornerRadius="2,2,2,2">
                        <ContentPresenter x:Name="contentPresenter"  
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#04000000"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFA46F"/>
                            <Setter Property="Foreground" Value="#FFA46F"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--滚动条-->
    <Style x:Key="ScrollBarThumb"  
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"  
                Value="true"/>
        <Setter Property="IsTabStop"  
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <!--滚动条背景色-->
                        <Rectangle  
                            Fill="#50000000"  
                            RadiusX="3"  
                            RadiusY="3"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton"  
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"  
                Value="true"/>
        <Setter Property="Background"  
                Value="Transparent"/>
        <Setter Property="Focusable"  
                Value="false"/>
        <Setter Property="IsTabStop"  
                Value="false"/>
        <Setter Property="Opacity"  
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"  
                               Width="{TemplateBinding Width}"  
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton"  
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"  
                Value="true"/>
        <Setter Property="Background"  
                Value="Transparent"/>
        <Setter Property="Focusable"  
                Value="false"/>
        <Setter Property="IsTabStop"  
                Value="false"/>
        <Setter Property="Opacity"  
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"  
                               Width="{TemplateBinding Width}"  
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="for_scrollbar"  
           TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"  
                Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled"  
                Value="false"/>
        <Setter Property="Background"  
                Value="Transparent"/>
        <Setter Property="Margin"  
                Value="0,1,1,6"/>
        <!--滚动条宽度-->
        <Setter Property="Width"  
                Value="8"/>
        <Setter Property="MinWidth"  
                Value="5"/>
        <Setter Property="Opacity"  
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Track x:Name="PART_Track"  
                               IsEnabled="{TemplateBinding IsMouseOver}"  
                               IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton  
                                    Style="{StaticResource VerticalScrollBarPageButton}"  
                                    Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton  
                                    Style="{StaticResource VerticalScrollBarPageButton}"  
                                    Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"  
                     Value="Horizontal">
                <Setter Property="Background"  
                        Value="Transparent"/>
                <Setter Property="Margin"  
                        Value="1,0,6,1"/>
                <Setter Property="Height"  
                        Value="5"/>
                <Setter Property="MinHeight"  
                        Value="5"/>
                <Setter Property="Width"  
                        Value="Auto"/>
                <Setter Property="Opacity"  
                        Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track"  
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  
                                                      Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ScrollViewer -->
    <Style x:Key="WScrollviewer"  
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="BorderBrush"  
                Value="LightGray"/>
        <Setter Property="BorderThickness"  
                Value="0"/>
        <Setter Property="HorizontalContentAlignment"  
                Value="Left"/>
        <Setter Property="HorizontalScrollBarVisibility"  
                Value="Auto"/>
        <Setter Property="VerticalContentAlignment"  
                Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility"  
                Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}"  
                            SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter  
                                Cursor="{TemplateBinding Cursor}"  
                                Margin="{TemplateBinding Padding}"  
                                ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar"  
                                       HorizontalAlignment="Right"  
                                       Maximum="{TemplateBinding ScrollableHeight}"  
                                       Orientation="Vertical"  
                                       Style="{StaticResource for_scrollbar}"  
                                       ViewportSize="{TemplateBinding ViewportHeight}"  
                                       Value="{TemplateBinding VerticalOffset}"  
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"  
                                       Maximum="{TemplateBinding ScrollableWidth}"  
                                       Orientation="Horizontal"  
                                       Style="{StaticResource for_scrollbar}"  
                                       VerticalAlignment="Bottom"  
                                       Value="{TemplateBinding HorizontalOffset}"  
                                       ViewportSize="{TemplateBinding ViewportWidth}"  
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_VerticalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="1"  
                                        Duration="0:0:1"/>
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_VerticalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="0"  
                                        Duration="0:0:1"  
                                        BeginTime="0:0:1"/>
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_HorizontalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="1"  
                                        Duration="0:0:1"/>
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_HorizontalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="0"  
                                        Duration="0:0:1"  
                                        BeginTime="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter"  
                                      SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_VerticalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="1"  
                                        Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave"  
                                      SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_VerticalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="0"  
                                        Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter"  
                                      SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_HorizontalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="1"  
                                        Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave"  
                                      SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_HorizontalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="0"  
                                        Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>