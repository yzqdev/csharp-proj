<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AduMusic;component/Styles/NorTheme.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="Wtab" TargetType="TabItem" >
        <!--<Setter Property="Width" Value="110"></Setter>-->
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{StaticResource NorFGBursh}"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type TabItem}">
                    <Grid Background="Transparent">
                        <StackPanel Orientation="Horizontal" x:Name="x"  HorizontalAlignment="Center" Margin="20,18">
                            <ContentPresenter x:Name="Content" 
                                              ContentSource="Header" HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" >
                            </ContentPresenter>
                            <TextBlock x:Name="Icon" Text="{TemplateBinding Tag}"  FontSize="{TemplateBinding FontSize}" 
                                       Foreground="{TemplateBinding Foreground}" TextAlignment="Center"
                                       VerticalAlignment="Center" Margin="0,0,0,0"></TextBlock>
                        </StackPanel>
                        <Border x:Name="y" BorderThickness="0,0,0,1" Visibility="Collapsed" BorderBrush="{StaticResource NorBorderBursh}" Margin="20,0"></Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" >
                            <!--<Setter Property="Foreground" TargetName="Icon" Value="{StaticResource NorHoverThemeBursh}"></Setter>
                            <Setter Property="BorderBrush" TargetName="y" Value="{StaticResource NorHoverThemeBursh}"></Setter>-->
                            <!--<Setter Property="Background" TargetName="x" Value="#9938475E"></Setter>-->
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <!--<Setter Property="Background" TargetName="x" Value="#50000000"></Setter>-->
                            <Setter Property="Foreground" TargetName="Icon" Value="{StaticResource NorSelectFGBursh}"></Setter>
                            <Setter Property="BorderBrush" TargetName="y" Value="{StaticResource NorSelectBorderBursh}"></Setter>
                            <Setter Property="Visibility" TargetName="y" Value="Visible"></Setter>
                            <!--<Setter Property="Visibility" TargetName="y" Value="Visible"></Setter>-->
                        </Trigger>
                        <!--<Trigger Property="Width" Value="60">
                            <Setter Property="Visibility" TargetName="Content" Value="Collapsed"></Setter>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter  Margin="0"  Content="{TemplateBinding Content}"  >
                    </ContentPresenter>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Foreground" Value="{StaticResource NorSelectFGBursh}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="TabControl" x:Key="MyTab" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="Control.Padding">
            <Setter.Value>
                <Thickness>2,2,2,2</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.HorizontalContentAlignment">
            <Setter.Value>
                <x:Static Member="HorizontalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.VerticalContentAlignment">
            <Setter.Value>
                <x:Static Member="VerticalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <!--容器背景色-->
        <Setter Property="Panel.Background">
            <Setter.Value>
                <SolidColorBrush>#80ffffff</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <!--边框-->
        <Setter Property="Border.BorderBrush">
            <Setter.Value>
                <SolidColorBrush>Transparent</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <!--边框-->
        <!--<Setter Property="Border.BorderThickness">
            <Setter.Value>
                <Thickness>1,1,1,1</Thickness>
            </Setter.Value>
        </Setter>-->
        <Setter Property="TextElement.Foreground">
            <Setter.Value>
                <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" Name="RowDefinition0" />
                            <RowDefinition Height="*" Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="0" BorderBrush="#10ffffff" BorderThickness="0,0,0,1">
                            <TabPanel Background="#00FFFFFF" IsItemsHost="True" Name="HeaderPanel" Margin="0,0,0,0" Panel.ZIndex="1" 
                                  KeyboardNavigation.TabIndex="1"  />
                        </Border>
                        <Border BorderThickness="0" 
                                BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" 
                                Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" 
                                KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="0" Grid.Row="1">
                            <ContentPresenter Content="{TemplateBinding TabControl.SelectedContent}" 
                                              ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}" 
                                              ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}" 
                                              ContentSource="SelectedContent" Name="PART_SelectedContentHost" 
                                              Margin="{TemplateBinding Control.Padding}" 
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>1</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderThickness" TargetName="HeaderPanel">
                                <Setter.Value>
                                    0
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Row" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                                <Setter.Value>
                                    <GridLength>Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <Thickness>0,0,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Bottom" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Row" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>1</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0">
                                <Setter.Value>
                                    <GridLength>Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                                <Setter.Value>
                                    <GridLength>0</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <Thickness>0,0,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Left" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement">
                            
                            <Setter Property="Grid.Row" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Row" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>1</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1">
                                <Setter.Value>
                                    <GridLength>Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                                <Setter.Value>
                                    <GridLength>0</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <Thickness>0,0,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Right" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>